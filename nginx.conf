user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Add the MIME types for glb files.
    types {
        model/gltf-binary glb;
    }

    server {
        listen 80;
        server_name houdini_web_server;

        location / {
            proxy_pass http://unix:/run/flask-socket/flask_app.sock;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Ensure nginx correctly manages WebSocket connections.
        location /socket.io/ {
            proxy_pass http://unix:/run/flask-socket/flask_app.sock;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/user_models {
            root /var/www;
            try_files $uri @fallback;
        }

        # Attempt to locate placeholder file if user model request failed.
        location @fallback {
            rewrite ^/static/user_models/(.*)$ /static/placeholder/$1 break;
            root /var/www;
            try_files $uri =404;
        }

        location /static {
            root /var/www;
            try_files $uri $uri/ $uri.html =404;
        }
    }
}